---
import BaseLayout from '../layouts/BaseLayout.astro';
import Icon from '../components/Icon.astro';
import CallToAction from '../components/CallToAction.astro';
---

<BaseLayout title="Resume Templates | Create Stunning Web Resumes" description="Choose from professional templates and create your online resume that stands out. No design skills required.">
	<div class="landing-page">
		<!-- Hero Section -->
		<section class="hero-section">
			<div class="hero-content">
				<h1 class="hero-title">
					100+ Free Resume, CV & Portfolio Templates
				</h1>
				
				<p class="hero-subtitle">
					Instantly turn your resume into a stunning online web page. No design or coding needed.
				</p>

				<!-- Search Bar -->
				<div class="search-container">
					<div class="search-bar">
						<Icon icon="paper-plane-tilt" size="1.2em" />
						<input 
							type="text" 
							placeholder="Search templates by job, style, or keyword..."
							class="search-input"
						/>
						<button class="search-button">Search</button>
					</div>
				</div>

				<!-- Stats -->
				<div class="stats-container">
					<div class="stat">
						<Icon icon="github-logo" size="1.1em" />
						<span>50,000+ users</span>
					</div>
					<div class="stat">
						<Icon icon="heart" size="1.1em" />
						<span>4.9/5 rating</span>
					</div>
					<div class="stat">
						<Icon icon="arrow-right" size="1.1em" />
						<span>100+ templates</span>
					</div>
				</div>

				<!-- CTA Buttons -->
				<div class="cta-container">
					<CallToAction href="/template/">
						Browse Templates
						<Icon icon="arrow-right" size="1.2em" />
					</CallToAction>
					<a href="/about/" class="secondary-cta">
						Learn More
					</a>
				</div>
			</div>
		</section>
	</div>
</BaseLayout>

<style>
	.landing-page {
		min-height: 80vh;
		display: flex;
		flex-direction: column;
		align-items: center;
		justify-content: center;
		text-align: center;
		padding: 2rem 1rem;
		position: relative;
	}

	.landing-page::before {
		--hero-bg: var(--bg-image-main);

		content: '';
		position: absolute;
		pointer-events: none;
		left: 50%;
		width: 100vw;
		aspect-ratio: calc(2.25 / var(--bg-scale));
		top: 0;
		transform: translateY(-75%) translateX(-50%);
		background:
			url('/assets/backgrounds/noise.png') top center/220px repeat,
			var(--hero-bg) center center / var(--bg-gradient-size) no-repeat,
			var(--gray-999);
		background-blend-mode: overlay, normal, normal;
		mix-blend-mode: var(--bg-blend-mode);
		z-index: -1;
	}

	.hero-section {
		max-width: 900px;
		width: 100%;
	}

	.hero-content {
		display: flex;
		flex-direction: column;
		gap: 1.5rem;
		align-items: center;
	}

	.hero-title {
		font-size: clamp(2.5rem, 8vw, 5rem);
		font-weight: 800;
		line-height: 1.1;
		color: var(--gray-0);
		margin: 0;
	}

	.highlight-web {
		color: var(--accent-regular);
	}

	.highlight-resumes {
		background: linear-gradient(45deg, var(--accent-regular), #9333ea);
		background-clip: text;
		-webkit-background-clip: text;
		-webkit-text-fill-color: transparent;
		color: var(--accent-regular);
	}

	.hero-subtitle {
		font-size: var(--text-lg);
		color: var(--gray-300);
		max-width: 600px;
		line-height: 1.6;
		margin: 0;
	}

	.search-container {
		width: 100%;
		max-width: 600px;
		margin: 0.5rem 0;
	}

	.search-bar {
		display: flex;
		align-items: center;
		background: var(--gray-800);
		border: 1px solid var(--gray-600);
		border-radius: 3rem;
		padding: 0.75rem 1rem;
		gap: 1rem;
		transition: border-color var(--theme-transition);
	}

	.search-bar:focus-within {
		border-color: var(--accent-regular);
		box-shadow: 0 0 0 2px var(--accent-subtle-overlay);
	}

	.search-input {
		flex: 1;
		background: transparent;
		border: none;
		color: var(--gray-0);
		font-size: var(--text-base);
		outline: none;
	}

	.search-input::placeholder {
		color: var(--gray-400);
	}

	.search-button {
		background: var(--accent-regular);
		color: var(--accent-text-over);
		border: none;
		padding: 0.75rem 1.5rem;
		border-radius: 2rem;
		font-weight: 500;
		cursor: pointer;
		transition: background-color var(--theme-transition);
	}

	.search-button:hover {
		background: var(--accent-dark);
	}

	.stats-container {
		display: flex;
		gap: 2rem;
		flex-wrap: wrap;
		justify-content: center;
		margin: 0.5rem 0;
	}

	.stat {
		display: flex;
		align-items: center;
		gap: 0.5rem;
		color: var(--gray-300);
		font-size: var(--text-sm);
	}

	.cta-container {
		display: flex;
		gap: 1rem;
		flex-wrap: wrap;
		justify-content: center;
		align-items: center;
		margin-top: 0.5rem;
	}

	.secondary-cta {
		padding: 0.75rem 1.5rem;
		color: var(--gray-300);
		text-decoration: none;
		border: 1px solid var(--gray-600);
		border-radius: 2rem;
		transition: 
			background-color var(--theme-transition),
			border-color var(--theme-transition);
	}

	.secondary-cta:hover {
		background: var(--gray-800);
		border-color: var(--gray-500);
	}

	@media (max-width: 768px) {
		.stats-container {
			gap: 1rem;
		}

		.stat {
			font-size: var(--text-xs);
		}

		.search-bar {
			padding: 0.5rem 0.75rem;
		}

		.search-button {
			padding: 0.5rem 1rem;
			font-size: var(--text-sm);
		}

		.cta-container {
			flex-direction: column;
			width: 100%;
		}

		.secondary-cta {
			width: 100%;
			text-align: center;
		}
	}

	@media (max-width: 480px) {
		.hero-title {
			font-size: 2.5rem;
		}

		.search-bar {
			flex-direction: column;
			gap: 0.75rem;
			text-align: left;
		}

		.search-input {
			width: 100%;
			padding: 0.5rem;
		}

		.search-button {
			width: 100%;
		}

		.stats-container {
			flex-direction: column;
			gap: 0.75rem;
		}
	}
</style>

<script>
	// Add search functionality
	document.addEventListener('DOMContentLoaded', () => {
		const searchInput = document.querySelector('.search-input') as HTMLInputElement;
		const searchButton = document.querySelector('.search-button') as HTMLButtonElement;

		const performSearch = () => {
			const query = searchInput.value.trim();
			if (query) {
				// Redirect to template page with search query
				window.location.href = `/template/?search=${encodeURIComponent(query)}`;
			} else {
				window.location.href = '/template/';
			}
		};

		searchButton.addEventListener('click', performSearch);
		
		searchInput.addEventListener('keypress', (e) => {
			if (e.key === 'Enter') {
				performSearch();
			}
		});
	});
</script>