---
import BaseLayout from '../layouts/BaseLayout.astro';
import Icon from '../components/Icon.astro';
import CallToAction from '../components/CallToAction.astro';
---

<BaseLayout title="Professional Resume Templates | Beautiful Web Resumes" description="Create modern, ATS-friendly resumes and portfolios online. Choose from customizable templates to showcase your skills and stand out.">
	<div class="landing-page">
		<!-- Hero Section -->
		<section class="hero-section">
			<div class="hero-content">
				<h1 class="hero-title">
					Create Resume Online
				</h1>
				
				<p class="hero-subtitle">
					Create beautiful, modern web resumes with our carefully crafted templates. Professional designs that make you stand out.
				</p>

                

				<!-- CTA Buttons -->
				<div class="cta-container">
					<CallToAction href="/template/">
						Browse Templates
						<Icon icon="arrow-right" size="1.2em" />
					</CallToAction>
					<a href="/about/" class="secondary-cta">
						Learn More
					</a>
				</div>
			</div>
		</section>
	</div>
</BaseLayout>

<style>
    .landing-page {
		min-height: 80vh;
		display: flex;
		flex-direction: column;
		align-items: center;
        justify-content: flex-start; /* 改为顶部对齐，便于整体上移 */
		text-align: center;
        padding: 2rem 1rem;
        padding-top: 4rem; /* 上移整体内容，保留适当间距 */
		position: relative;
	}

	.landing-page::before {
		--hero-bg: var(--bg-image-main);

		content: '';
		position: absolute;
		pointer-events: none;
		left: 50%;
		width: 100vw;
		aspect-ratio: calc(2.25 / var(--bg-scale));
		top: 0;
		transform: translateY(-75%) translateX(-50%);
		background:
			url('/assets/backgrounds/noise.png') top center/220px repeat,
			var(--hero-bg) center center / var(--bg-gradient-size) no-repeat,
			var(--gray-999);
		background-blend-mode: overlay, normal, normal;
		mix-blend-mode: var(--bg-blend-mode);
		z-index: -1;
	}

    .hero-section {
        max-width: 900px;
        width: 100%;
        margin-top: 0;
    }

	.hero-content {
		display: flex;
		flex-direction: column;
		gap: 1.5rem;
		align-items: center;
	}

	.hero-title {
		font-size: clamp(2.5rem, 8vw, 5rem);
		font-weight: 800;
		line-height: 1.1;
		color: var(--gray-0);
		margin: 0;
	}

	.highlight-web {
		color: var(--accent-regular);
	}

	.highlight-resumes {
		background: linear-gradient(45deg, var(--accent-regular), #9333ea);
		background-clip: text;
		-webkit-background-clip: text;
		-webkit-text-fill-color: transparent;
		color: var(--accent-regular);
	}

	.hero-subtitle {
		font-size: var(--text-lg);
		color: var(--gray-300);
		max-width: 600px;
		line-height: 1.6;
		margin: 0;
	}

    /* removed search + stats styles */

	.cta-container {
		display: flex;
		gap: 1rem;
		flex-wrap: wrap;
		justify-content: center;
		align-items: center;
		margin-top: 0.5rem;
	}

	.secondary-cta {
		padding: 0.75rem 1.5rem;
		color: var(--gray-300);
		text-decoration: none;
		border: 1px solid var(--gray-600);
		border-radius: 2rem;
		transition: 
			background-color var(--theme-transition),
			border-color var(--theme-transition);
	}

	.secondary-cta:hover {
		background: var(--gray-800);
		border-color: var(--gray-500);
	}

	@media (max-width: 768px) {
        /* removed responsive rules for search + stats */

		.cta-container {
			flex-direction: column;
			width: 100%;
		}

    @media (min-width: 50em) {
        .landing-page { padding-top: 5rem; }
    }

		.secondary-cta {
			width: 100%;
			text-align: center;
		}
	}

	@media (max-width: 480px) {
		.hero-title {
			font-size: 2.5rem;
		}

        /* removed mobile rules for search + stats */
	}
</style>

<script>
	// Add search functionality
	document.addEventListener('DOMContentLoaded', () => {
		const searchInput = document.querySelector('.search-input') as HTMLInputElement;
		const searchButton = document.querySelector('.search-button') as HTMLButtonElement;

		const performSearch = () => {
			const query = searchInput.value.trim();
			if (query) {
				// Redirect to template page with search query
				window.location.href = `/template/?search=${encodeURIComponent(query)}`;
			} else {
				window.location.href = '/template/';
			}
		};

		searchButton.addEventListener('click', performSearch);
		
		searchInput.addEventListener('keypress', (e) => {
			if (e.key === 'Enter') {
				performSearch();
			}
		});
	});
</script>