---
import '../styles/global.css';

interface Props {
	title?: string | undefined;
	description?: string | undefined;
	image?: string | undefined;
	keywords?: string | undefined;
}

const {
	title = 'ResumeLink - Free Resume & CV Builder | 100+ Professional Templates',
	description = 'Transform your resume, CV and portfolio into stunning web pages instantly. Choose from 100+ professional templates. No design skills required. Mobile-responsive, SEO-optimized, ATS-friendly.',
	image = '/logo.png',
	keywords = 'free resume builder,CV maker,online resume,CV templates,resume templates,CV builder,professional resume,job resume,curriculum vitae,personal website,career portfolio,resume design',
} = Astro.props;

// 构建完整的 URL
const currentUrl = Astro.url.href;
const siteUrl = 'https://ResumeLink.com'; // 替换为你的实际域名
const fullImageUrl = new URL(image, siteUrl).href;
---

<meta charset="UTF-8" />
<meta name="description" content={description} />
<meta name="keywords" content={keywords} />
<meta name="viewport" content="width=device-width, initial-scale=1.0" />
<meta name="generator" content={Astro.generator} />
<meta name="author" content="ResumeLink" />
<meta name="robots" content="index, follow" />
<meta name="language" content="en-US" />

<!-- Open Graph / Facebook -->
<meta property="og:type" content="website" />
<meta property="og:url" content={currentUrl} />
<meta property="og:title" content={title} />
<meta property="og:description" content={description} />
<meta property="og:image" content={fullImageUrl} />
<meta property="og:site_name" content="ResumeLink" />
<meta property="og:locale" content="en_US" />

<!-- Twitter -->
<meta name="twitter:card" content="summary_large_image" />
<meta name="twitter:url" content={currentUrl} />
<meta name="twitter:title" content={title} />
<meta name="twitter:description" content={description} />
<meta name="twitter:image" content={fullImageUrl} />

<!-- 额外的 SEO 标签 -->
<meta name="theme-color" content="#7611a6" />
<meta name="msapplication-TileColor" content="#7611a6" />

<title>{title}</title>

<!-- Favicon -->
<link rel="icon" type="image/x-icon" href="/favicon/favicon.ico" />
<link rel="icon" type="image/svg+xml" href="/favicon/favicon.svg" />
<link rel="apple-touch-icon" href="/favicon/apple-touch-icon.png" />
<link rel="icon" type="image/png" sizes="96x96" href="/favicon/favicon-96x96.png" />
<link rel="manifest" href="/favicon/site.webmanifest" />
<link rel="preconnect" href="https://fonts.googleapis.com" />
<link rel="preconnect" href="https://fonts.gstatic.com" crossorigin />
<link
	href="https://fonts.googleapis.com/css2?family=Public+Sans:ital,wght@0,400;0,700;1,400&family=Rubik:wght@500;600&display=swap"
	rel="stylesheet"
/>
<!-- JSON-LD Structured Data -->
<script type="application/ld+json">
{
  "@context": "https://schema.org",
  "@type": "WebSite",
  "name": "ResumeLink",
  "description": "Transform your resume and portfolio into stunning web pages instantly. Choose from 100+ professional templates. No design skills required.",
  "url": "https://ResumeLink.com",
  "creator": {
    "@type": "Organization",
    "name": "ResumeLink",
    "email": "wendy7756@outlook.com"
  },
  "potentialAction": {
    "@type": "SearchAction",
    "target": "https://ResumeLink.com/template?search={search_term_string}",
    "query-input": "required name=search_term_string"
  },
  "sameAs": [
    "https://github.com/your-username/ResumeLink"
  ],
  "audience": {
    "@type": "Audience",
    "geographicArea": ["North America", "Canada", "Europe", "Australia", "United Kingdom"]
  }
}
</script>

<script is:inline>
	// This code is inlined in the head to make theme switching instant & blocking.
	const getThemePreference = () => {
		if (typeof localStorage !== 'undefined' && localStorage.getItem('theme')) {
			return localStorage.getItem('theme');
		}
		// Default to light theme instead of following system preference
		return 'light';
	};
	const isDark = getThemePreference() === 'dark';
	document.documentElement.classList[isDark ? 'add' : 'remove']('theme-dark');

	if (typeof localStorage !== 'undefined') {
		// Watch the document element and persist user preference when it changes.
		const observer = new MutationObserver(() => {
			const isDark = document.documentElement.classList.contains('theme-dark');
			localStorage.setItem('theme', isDark ? 'dark' : 'light');
		});
		observer.observe(document.documentElement, { attributes: true, attributeFilter: ['class'] });
	}
</script>
